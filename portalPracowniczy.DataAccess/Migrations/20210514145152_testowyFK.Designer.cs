// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portalPracowniczy.DataAccess;

namespace portalPracowniczy.DataAccess.Migrations
{
    [DbContext(typeof(PortalStorageContext))]
    [Migration("20210514145152_testowyFK")]
    partial class testowyFK
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdSuperior")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HolidayTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IdHolidayType")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HolidayTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.HolidayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdERP")
                        .HasColumnType("int");

                    b.Property<int>("IdRCP")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HolidayTypes");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Proposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HolidayTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IdHolidayType")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("curentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HolidayTypeId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("IdBranch")
                        .HasColumnType("int");

                    b.Property<int>("IdERP")
                        .HasColumnType("int");

                    b.Property<int>("IdPosition")
                        .HasColumnType("int");

                    b.Property<int>("IdRCP")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("PositionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Holiday", b =>
                {
                    b.HasOne("portalPracowniczy.DataAccess.Entities.HolidayType", null)
                        .WithMany("Holidays")
                        .HasForeignKey("HolidayTypeId");

                    b.HasOne("portalPracowniczy.DataAccess.Entities.User", null)
                        .WithMany("Holidays")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Proposal", b =>
                {
                    b.HasOne("portalPracowniczy.DataAccess.Entities.HolidayType", null)
                        .WithMany("Proposals")
                        .HasForeignKey("HolidayTypeId");

                    b.HasOne("portalPracowniczy.DataAccess.Entities.Status", null)
                        .WithMany("Proposals")
                        .HasForeignKey("StatusId");

                    b.HasOne("portalPracowniczy.DataAccess.Entities.User", null)
                        .WithMany("Proposals")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.User", b =>
                {
                    b.HasOne("portalPracowniczy.DataAccess.Entities.Branch", null)
                        .WithMany("Users")
                        .HasForeignKey("BranchId");

                    b.HasOne("portalPracowniczy.DataAccess.Entities.Position", null)
                        .WithMany("Users")
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Branch", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.HolidayType", b =>
                {
                    b.Navigation("Holidays");

                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Position", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.Status", b =>
                {
                    b.Navigation("Proposals");
                });

            modelBuilder.Entity("portalPracowniczy.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Holidays");

                    b.Navigation("Proposals");
                });
#pragma warning restore 612, 618
        }
    }
}
